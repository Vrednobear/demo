package com.example.demo.controllers;

import com.example.demo.model.Result;
import com.example.demo.model.Signature;
import org.apache.commons.codec.digest.HmacUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;
import java.util.TreeMap;

@RestController
@RequestMapping("/api")
public class MainController {

    private static final Logger logger = LoggerFactory.getLogger(MainController.class);
    private static final String STATUS_SUCCESS = "Success";

    @Value("${signature.secret}")
    private String secret;

    @PostMapping("/operations/{operationId}")
    public Result issueSignature(@PathVariable("operationId") String operationId,
                          @RequestParam Map<String,String> allParams)
    {
        logger.info("Operation ID: " + operationId);

        Map<String, String> sortedByParamName = new TreeMap<>(allParams);

        //Make the string of name1=value1&name2=value2... format from request params
        StringBuilder paramsInString = new StringBuilder();
        sortedByParamName.forEach((key, value) -> paramsInString.append(key).append("=").append(value).append("&"));
        // Remove the last "&"
        paramsInString.setLength(paramsInString.length() - 1);

        String s = new HmacUtils("HmacSHA256", secret).hmacHex(paramsInString.toString());
        List<Signature> signatures = List.of(new Signature(s));
        return new Result(STATUS_SUCCESS, signatures);

//        May also be generated by JDK measures:
//        Mac hmacSHA256 = Mac.getInstance("HmacSHA256");
//        hmacSHA256.init(new SecretKeySpec(secret.getBytes(StandardCharsets.UTF_8), "HmacSHA256"));
//        String s = String.valueOf(Hex.encode(hmacSHA256.doFinal(paramsInString.toString().getBytes())));

    }

    @ExceptionHandler(value = IndexOutOfBoundsException.class)
    public ResponseEntity<Object> exception(IndexOutOfBoundsException exception) {
        return new ResponseEntity<>("No parameters found.", HttpStatus.BAD_REQUEST);
    }

}
